Initializing Datasets and Dataloaders...
SqueezeNet(
  (features): Sequential(
    (0): Conv2d(3, 96, kernel_size=(7, 7), stride=(2, 2))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=Tru                       e)
    (3): Fire(
      (squeeze): Conv2d(96, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace)
      (expand3x3): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,                        1))
      (expand3x3_activation): ReLU(inplace)
    )
    (4): Fire(
      (squeeze): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace)
      (expand3x3): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,                        1))
      (expand3x3_activation): ReLU(inplace)
    )
    (5): Fire(
      (squeeze): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace)
      (expand3x3): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1                       , 1))
      (expand3x3_activation): ReLU(inplace)
    )
    (6): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=Tru                       e)
    (7): Fire(
      (squeeze): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace)
      (expand3x3): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1                       , 1))
      (expand3x3_activation): ReLU(inplace)
    )
    (8): Fire(
      (squeeze): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace)
      (expand3x3): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1                       , 1))
      (expand3x3_activation): ReLU(inplace)
    )
    (9): Fire(
      (squeeze): Conv2d(384, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace)
      (expand3x3): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1                       , 1))
      (expand3x3_activation): ReLU(inplace)
    )
    (10): Fire(
      (squeeze): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1                       , 1))
      (expand3x3_activation): ReLU(inplace)
    )
    (11): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=Tr                       ue)
    (12): Fire(
      (squeeze): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1                       , 1))
      (expand3x3_activation): ReLU(inplace)
    )
  )
  (classifier): Sequential(
    (0): Dropout(p=0.5)
    (1): Conv2d(512, 1000, kernel_size=(1, 1), stride=(1, 1))
    (2): ReLU(inplace)
    (3): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
Params to learn:
         features.0.weight
         features.0.bias
         features.3.squeeze.weight
         features.3.squeeze.bias
         features.3.expand1x1.weight
         features.3.expand1x1.bias
         features.3.expand3x3.weight
         features.3.expand3x3.bias
         features.4.squeeze.weight
         features.4.squeeze.bias
         features.4.expand1x1.weight
         features.4.expand1x1.bias
         features.4.expand3x3.weight
         features.4.expand3x3.bias
         features.5.squeeze.weight
         features.5.squeeze.bias
         features.5.expand1x1.weight
         features.5.expand1x1.bias
         features.5.expand3x3.weight
         features.5.expand3x3.bias
         features.7.squeeze.weight
         features.7.squeeze.bias
         features.7.expand1x1.weight
         features.7.expand1x1.bias
         features.7.expand3x3.weight
         features.7.expand3x3.bias
         features.8.squeeze.weight
         features.8.squeeze.bias
         features.8.expand1x1.weight
         features.8.expand1x1.bias
         features.8.expand3x3.weight
         features.8.expand3x3.bias
         features.9.squeeze.weight
         features.9.squeeze.bias
         features.9.expand1x1.weight
         features.9.expand1x1.bias
         features.9.expand3x3.weight
         features.9.expand3x3.bias
         features.10.squeeze.weight
         features.10.squeeze.bias
         features.10.expand1x1.weight
         features.10.expand1x1.bias
         features.10.expand3x3.weight
         features.10.expand3x3.bias
         features.12.squeeze.weight
         features.12.squeeze.bias
         features.12.expand1x1.weight
         features.12.expand1x1.bias
         features.12.expand3x3.weight
         features.12.expand3x3.bias
         classifier.1.weight
         classifier.1.bias
=================
Training model...
Epoch 0/14
----------
Loader len:  150700
Time: 24m Loss: 2.8318 Acc: 0.0832
Epoch 1/14
----------
Loader len:  150700
Time: 29m Loss: 2.8115 Acc: 0.1042
Epoch 2/14
----------
Loader len:  150700
Time: 34m Loss: 2.8159 Acc: 0.0996
Epoch 3/14
----------
Loader len:  150700
Time: 39m Loss: 2.8089 Acc: 0.1115
Epoch 4/14
----------
Loader len:  150700
Time: 44m Loss: 2.7988 Acc: 0.1241
Epoch 5/14
----------
Loader len:  150700
Time: 48m Loss: 2.7820 Acc: 0.1374
Epoch 6/14
----------
Loader len:  150700
Time: 53m Loss: 2.7633 Acc: 0.1399
Epoch 7/14
----------
Loader len:  150700
Time: 58m Loss: 2.7980 Acc: 0.1144
Epoch 8/14
----------
Loader len:  150700
Time: 63m Loss: 2.8055 Acc: 0.0989
Epoch 9/14
----------
Loader len:  150700
Time: 68m Loss: 2.8044 Acc: 0.1029
Epoch 10/14
----------
Loader len:  150700
Time: 73m Loss: 2.8038 Acc: 0.0960
Epoch 11/14
----------
Loader len:  150700
Time: 77m Loss: 2.8107 Acc: 0.0866
Epoch 12/14
----------
Loader len:  150700
Time: 83m Loss: 2.8175 Acc: 0.0853
Epoch 13/14
----------
Loader len:  150700
Time: 88m Loss: 2.7823 Acc: 0.1084
Epoch 14/14
----------
Loader len:  150700
Time: 93m Loss: 2.8079 Acc: 0.1080

Training complete in 93m 21s
Best val Acc: 0.139947
=================
Evaluating model...
Loader len:  480

Valid Acc: 0.137500

